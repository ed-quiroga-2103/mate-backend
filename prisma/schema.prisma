generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model graphs {
  id     String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  links  Json[]
  nodes  Json[]
  course course[]
}

model course {

  id          String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  description String
  name        String
  status      String
  code        String   @unique
  dependecies String[]


  graph graphs @relation(fields: [graphsId], references: [id], onDelete: Cascade)

  graphsId  String      @db.ObjectId
  questions questions[]
  quiz      quiz[]
}

model users {
  id           String @id @default(dbgenerated()) @map("_id") @db.ObjectId
  admitionYear String
  dni          String
  email        String
  lastCourse   String
  lastName     String
  name         String
  password     String
  progress     Json
}

model questions {

  id         String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  text       String
  tags       String[]
  url        String?
  difficulty String
  options    Json[]

  courseId String @db.ObjectId


  course course @relation(fields: [courseId], references: [id])



}

model quiz {

  id        String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  questions Json[]
  tags      String[]
  courseId  String   @db.ObjectId



  course course @relation(fields: [courseId], references: [id])


  quizResult quizResult[]
}

model quizResult {

  id         String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
  answers    Json[]
  approved   Boolean
  percentage Float

  quizId String @db.ObjectId
  quiz   quiz   @relation(fields: [quizId], references: [id], onDelete: Cascade)

}
